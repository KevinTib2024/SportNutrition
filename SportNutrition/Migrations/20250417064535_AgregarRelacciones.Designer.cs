// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportNutrition.Context;

#nullable disable

namespace SportNutrition.Migrations
{
    [DbContext(typeof(SportNutritionDbContext))]
    [Migration("20250417064535_AgregarRelacciones")]
    partial class AgregarRelacciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportNutrition.Model.Exercises", b =>
                {
                    b.Property<int>("exercisesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("exercisesId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("muscleGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("exercisesId");

                    b.ToTable("exercises");
                });

            modelBuilder.Entity("SportNutrition.Model.Gender", b =>
                {
                    b.Property<int>("genderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genderId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genderId");

                    b.ToTable("gender");
                });

            modelBuilder.Entity("SportNutrition.Model.IdentificationType", b =>
                {
                    b.Property<int>("IdentificationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdentificationTypeId"));

                    b.Property<string>("Identification_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("IdentificationTypeId");

                    b.ToTable("identificationType");
                });

            modelBuilder.Entity("SportNutrition.Model.Meals", b =>
                {
                    b.Property<int>("mealsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mealsId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("calories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carbs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("protein")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mealsId");

                    b.ToTable("meals");
                });

            modelBuilder.Entity("SportNutrition.Model.NutritionMeals", b =>
                {
                    b.Property<int>("nutritionMealsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("nutritionMealsId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("mealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("meals_Id")
                        .HasColumnType("int");

                    b.Property<int>("nutritionPlans_Id")
                        .HasColumnType("int");

                    b.HasKey("nutritionMealsId");

                    b.HasIndex("meals_Id");

                    b.HasIndex("nutritionPlans_Id");

                    b.ToTable("nutritionMeals");
                });

            modelBuilder.Entity("SportNutrition.Model.NutritionPlans", b =>
                {
                    b.Property<int>("nutritionPlansId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("nutritionPlansId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("dalyCalories")
                        .HasColumnType("real");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("nutritionPlansId");

                    b.ToTable("nutritionPlans");
                });

            modelBuilder.Entity("SportNutrition.Model.PermissionXUserType", b =>
                {
                    b.Property<int>("permissionXUserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("permissionXUserTypeId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("permissions_Id")
                        .HasColumnType("int");

                    b.Property<int>("userType_Id")
                        .HasColumnType("int");

                    b.HasKey("permissionXUserTypeId");

                    b.HasIndex("permissions_Id");

                    b.HasIndex("userType_Id");

                    b.ToTable("permissionXUserType");
                });

            modelBuilder.Entity("SportNutrition.Model.Permissions", b =>
                {
                    b.Property<int>("permissionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("permissionsId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("permissionsId");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("SportNutrition.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("birthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender_Id")
                        .HasColumnType("int");

                    b.Property<float>("height")
                        .HasColumnType("real");

                    b.Property<string>("identificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("identificationType_Id")
                        .HasColumnType("int");

                    b.Property<string>("lastNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nutritionPlans_Id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_Type_Id")
                        .HasColumnType("int");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.Property<int>("workout_Id")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.HasIndex("gender_Id");

                    b.HasIndex("identificationType_Id");

                    b.HasIndex("nutritionPlans_Id");

                    b.HasIndex("user_Type_Id");

                    b.HasIndex("workout_Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("SportNutrition.Model.UserType", b =>
                {
                    b.Property<int>("userTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userTypeId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("userType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userTypeId");

                    b.ToTable("userType");
                });

            modelBuilder.Entity("SportNutrition.Model.Workout", b =>
                {
                    b.Property<int>("workoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("workoutId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("difficultyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("workoutId");

                    b.ToTable("workouts");
                });

            modelBuilder.Entity("SportNutrition.Model.WorkoutExercises", b =>
                {
                    b.Property<int>("workoutExercisesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("workoutExercisesId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("exercises_Id")
                        .HasColumnType("int");

                    b.Property<int>("reps")
                        .HasColumnType("int");

                    b.Property<int>("restSeconds")
                        .HasColumnType("int");

                    b.Property<int>("sets")
                        .HasColumnType("int");

                    b.Property<int>("workout_Id")
                        .HasColumnType("int");

                    b.HasKey("workoutExercisesId");

                    b.HasIndex("exercises_Id");

                    b.HasIndex("workout_Id");

                    b.ToTable("workoutExercises");
                });

            modelBuilder.Entity("SportNutrition.Model.NutritionMeals", b =>
                {
                    b.HasOne("SportNutrition.Model.Meals", "meals")
                        .WithMany("nutritionMeals")
                        .HasForeignKey("meals_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.NutritionPlans", "nutritionPlans")
                        .WithMany("nutritionMeals")
                        .HasForeignKey("nutritionPlans_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("meals");

                    b.Navigation("nutritionPlans");
                });

            modelBuilder.Entity("SportNutrition.Model.PermissionXUserType", b =>
                {
                    b.HasOne("SportNutrition.Model.Permissions", "permissions")
                        .WithMany("permissionXUserTypes")
                        .HasForeignKey("permissions_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.UserType", "userType")
                        .WithMany("permissionsXUserType")
                        .HasForeignKey("userType_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("permissions");

                    b.Navigation("userType");
                });

            modelBuilder.Entity("SportNutrition.Model.User", b =>
                {
                    b.HasOne("SportNutrition.Model.Gender", "gender")
                        .WithMany("users")
                        .HasForeignKey("gender_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.IdentificationType", "identificationType")
                        .WithMany("users")
                        .HasForeignKey("identificationType_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.NutritionPlans", "nutritionPlans")
                        .WithMany("users")
                        .HasForeignKey("nutritionPlans_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.UserType", "user_Type")
                        .WithMany("users")
                        .HasForeignKey("user_Type_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.Workout", "workout")
                        .WithMany("users")
                        .HasForeignKey("workout_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gender");

                    b.Navigation("identificationType");

                    b.Navigation("nutritionPlans");

                    b.Navigation("user_Type");

                    b.Navigation("workout");
                });

            modelBuilder.Entity("SportNutrition.Model.WorkoutExercises", b =>
                {
                    b.HasOne("SportNutrition.Model.Exercises", "exercises")
                        .WithMany("workoutExercises")
                        .HasForeignKey("exercises_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SportNutrition.Model.Workout", "workout")
                        .WithMany("workoutExercises")
                        .HasForeignKey("workout_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("exercises");

                    b.Navigation("workout");
                });

            modelBuilder.Entity("SportNutrition.Model.Exercises", b =>
                {
                    b.Navigation("workoutExercises");
                });

            modelBuilder.Entity("SportNutrition.Model.Gender", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("SportNutrition.Model.IdentificationType", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("SportNutrition.Model.Meals", b =>
                {
                    b.Navigation("nutritionMeals");
                });

            modelBuilder.Entity("SportNutrition.Model.NutritionPlans", b =>
                {
                    b.Navigation("nutritionMeals");

                    b.Navigation("users");
                });

            modelBuilder.Entity("SportNutrition.Model.Permissions", b =>
                {
                    b.Navigation("permissionXUserTypes");
                });

            modelBuilder.Entity("SportNutrition.Model.UserType", b =>
                {
                    b.Navigation("permissionsXUserType");

                    b.Navigation("users");
                });

            modelBuilder.Entity("SportNutrition.Model.Workout", b =>
                {
                    b.Navigation("users");

                    b.Navigation("workoutExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
